{ English en
b x o 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F
set and or not if else case default iterate import while def return continue break as
class properties enum variants self Self extension extend
int float bool str list map
true false
line_comment block_comment_start block_comment_end string_start string_end char_start char_end escape attribute_prefix arrow doc_comment
wrapLength historyLength name
package name src tests benches type lib app version authors github gitlab email license description readme homepage repo features dependencies usage git branch path dev build main
Compiling Building Built Linking Emitted Error errors Warning warnings
e0001 placeholder
e0002 placeholder
e0003 placeholder
e0004 placeholder
e0005 placeholder
e0006 placeholder
e0007 placeholder
e0101 placeholder
e0102 placeholder
e0201 placeholder
e0202 placeholder
e0203 placeholder
e0204 placeholder
e0205 placeholder
e0206 placeholder
e0207 placeholder
e0208 placeholder
e0209 placeholder
e0301 placeholder
e0401 placeholder
e0402 placeholder
fck command line interface
new
Generate a new project
shell
Run the shell
build
Build the specified project or file
run
Run the specified project after (optionally) building
test
Test the given project using all or some tests
info
Get info about the current fck version
lint
Lint a project depending on the style file
raw
Run a raw piece of fck code
doc
Generate the documentation for a project
translate
Translate a file or project into a target language
help h
Show help information
path p
Path to file or directory
git g
Initialise the new project as a git repository
dump-llvm d
Dump the LLVM IR to a file
no-build n
Don't build before running the command
test t
Path like string to a specific file module or test function to run. Can be given more than once
raw r
Raw string to run
target l
Language to translate the code into
output o
Path to output the translated file to
comment c
Include the comments in translation using LibreTranslate